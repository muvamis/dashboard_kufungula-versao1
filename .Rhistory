#   ungroup()
##all
# tab_freq_PI_all <- presencas_PI %>%
#   group_by(FormacaoPI, Sexo,presenca) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n) * 100,
#          Percentagem = round(freq, digits = 0)) %>%
#   ungroup()
# Seu código para criar tab_freq_AG
# tab_freq_AG <- presencas_AG %>%
#   group_by(Distrito, NomeSessao, Sexo,presenca) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n) * 100,
#          Percentagem = round(freq, digits = 0)) %>%
#   ungroup()
###ALL
# tab_freq_AG_all <- presencas_AG %>%
#   group_by(NomeSessao,Sexo, presenca) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n) * 100,
#          Percentagem = round(freq, digits = 0)) %>%
#   ungroup()
#
#
# library(esquisse)
# esquisser(tab_freq_PI)
############################################################################
###########
# presencas_PI <- presencas_PI %>%
#   mutate(`Faixa Etária 18-24` = ifelse(Idade >= 18 & Idade <= 24, 1, 0),
#          `Faixa Etária 25-35` = ifelse(Idade > 24 & Idade <= 35, 1, 0))
# Criação da tabela agregada
Tabela_PI<- presencas_PI %>%
filter(presencas_PI$presenca == "SIM") %>%  # Filtrar apenas as presenças confirmadas
group_by(Distrito, Sexo, NomeSessao) %>%
summarise(
totais = n(),  # Contagem total por grupo
`Faixa Etária 18-24` = sum(`Faixa Etária 18-24`, na.rm = TRUE),
`Faixa Etária 25-35` = sum(`Faixa Etária 25-35`, na.rm = TRUE)
) %>%
ungroup()
############
#
# presencas_AG <- presencas_AG %>%
#   mutate(`Faixa Etária 18-24` = ifelse(Idade >= 18 & Idade <= 24, 1, 0),
#          `Faixa Etária 25-35` = ifelse(Idade > 24 & Idade <= 35, 1, 0))
# # Criação da tabela agregada
Tabela_AG <- presencas_AG %>%
filter(presencas_AG$presenca == "SIM") %>%  # Filtrar apenas as presenças confirmadas
group_by(Distrito, Sexo, NomeSessao) %>%
summarise(
totais = n(),  # Contagem total por grupo
`Faixa Etária 18-24` = sum(`Faixa Etária 18-24`, na.rm = TRUE),
`Faixa Etária 25-35` = sum(`Faixa Etária 25-35`, na.rm = TRUE)
) %>%
ungroup()
#######################################
##################Tabela para individual
# Data_Individual_PI <- presencas_PI %>%
#   select(Nome_Participante, NomeSessao, presenca,Distrito, Comunidade)
#
# Data_Individual_AG$cor <- ifelse(Data_Individual_AG$presenca == 'SIM', 'green', 'red')
# Data_Individual_AG <- presencas_AG %>%
#   select(Nome_Participante, NomeSessao, presenca,Distrito, Comunidade)
#
# Data_Individual_AG$cor <- ifelse(Data_Individual_AG$presenca == 'SIM', 'green', 'red')
# data_united <- Data_Individual_AG %>%
# Gerar o gráfico de pontos
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
<<<<<<< HEAD
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# # Criação da tabela agregada
Tabela_AG <- presencas_AG %>%
filter(presencas_AG$presenca == "SIM") %>%  # Filtrar apenas as presenças confirmadas
group_by(Distrito,Comunidade, Sexo, NomeSessao) %>%
summarise(
totais = n(),  # Contagem total por grupo
`Faixa Etária 18-24` = sum(`Faixa Etária 18-24`, na.rm = TRUE),
`Faixa Etária 25-35` = sum(`Faixa Etária 25-35`, na.rm = TRUE)
) %>%
ungroup()
View(Tabela_AG)
View(Tabela_PI)
Tabela_PI<- presencas_PI %>%
filter(presencas_PI$presenca == "SIM") %>%  # Filtrar apenas as presenças confirmadas
group_by(Distrito,Comunidade, Sexo, NomeSessao) %>%
summarise(
totais = n(),  # Contagem total por grupo
`Faixa Etária 18-24` = sum(`Faixa Etária 18-24`, na.rm = TRUE),
`Faixa Etária 25-35` = sum(`Faixa Etária 25-35`, na.rm = TRUE)
) %>%
ungroup()
runApp()
runApp()
runApp()
ui_aba3 <- fluidPage(
# Aba 'Overview'
#navbarPage(
title = "Navegação",
id = "main_tabs",
tabPanel("Visão Geral",
sidebarLayout(
sidebarPanel(
selectInput("ind_input_dist", "Escolha o Distrito:",
choices = c("TODOS",unique(Presencas$Distrito)),
selected = "TODOS"),
# selectInput("ind_input_com", "Escolha o Distrito:",
#              choices = c("TODOS", unique(Presencas$Comunidade)),
#              selected = "TODOS")
uiOutput("com_select_ui"),
downloadButton("downloadDataINDIVIDUL", "Baixar Tabela")
# ... outros elementos UI para Sessões de PI
),
mainPanel(
dataTableOutput("Tabelaindividual")
#plotOutput("Tabelaindividual")
)
)
))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
=======
runApp()
runApp()
>>>>>>> 7976c5ff56af77535d88187227b0b58d6acc4090
Presencas<- Presencas  %>%
mutate(`Faixa Etária 18-24` = ifelse(Idade >= 18 & Idade <= 24, 1, 0),
`Faixa Etária 25-35` = ifelse(Idade > 24 & Idade <= 35, 1, 0))
# Check and install packages if needed
packages <- c("readxl","RStata","reticulate", "shiny", "bslib", "ggthemes", "RColorBrewer", "sf", "shinythemes", "lubridate", "jsonlite",
"stringr", "readr", "dplyr", "tidyverse", "shinyjs", "plotly", "ggplot2", "DT", "shinyWidgets",
"shinydashboard", "shinycssloaders", "cowplot", "ggmap", "ggspatial", "rmarkdown", "rgdal", "RStata",
"fontawesome", "haven", "readxl", "gridExtra", "scales", "writexl", "openxlsx", "kableExtra", "rlang", "formattable"
)
presencas_PI<-filter(Presencas, Presencas$Formation_PI=="SIM")
Kufungula <- read_excel("Data/Lista_Selecionados_Kufungula.xlsx")
#####~
#PACOTES ««« INSTALAR E CARREGAR
# Check and install packages if needed
packages <- c("readxl","RStata","reticulate", "shiny", "bslib", "ggthemes", "RColorBrewer", "sf", "shinythemes", "lubridate", "jsonlite",
"stringr", "readr", "dplyr", "tidyverse", "shinyjs", "plotly", "ggplot2", "DT", "shinyWidgets",
"shinydashboard", "shinycssloaders", "cowplot", "ggmap", "ggspatial", "rmarkdown", "rgdal", "RStata",
"fontawesome", "haven", "readxl", "gridExtra", "scales", "writexl", "openxlsx", "kableExtra", "rlang", "formattable"
)
install_packages <- packages[!sapply(packages, requireNamespace, quietly = TRUE)]
if (length(install_packages) > 0) {
install.packages(install_packages)
}
# Load packages
library(shiny)
library(rlang)
library(RStata)
library(bslib)
library(ggthemes)
library(RColorBrewer)
library(sf)
library(shinythemes)
library(lubridate)
library(jsonlite)
library(stringr)
library(readr)
library(dplyr)
library(tidyverse)
library(shinyjs)
library(plotly)
library(ggplot2)
library(DT)
library(shinyWidgets)
library(shinydashboard)
library(bslib)
library(shinycssloaders)
library(ggmap)
library(ggspatial)
library(rmarkdown)
# library(rgdal)
library(fontawesome)
library(haven)
library(readxl)
library(scales)
library(writexl)
library(openxlsx)
library(gridExtra)
library(cowplot)
library(kableExtra)
Kufungula <- read_excel("Data/Lista_Selecionados_Kufungula.xlsx")
Presencas <- read_dta("Data/Presencas_clear.dta")
Nampula<- Kufungula %>% filter(Provincia=="Nampula")
Cabo_Delgado<- Kufungula %>% filter(Provincia=="Cabo Delgado")
# Selecione apenas as colunas desejadas em Presencas_atualizado
# Presencas$Comunidade <- ifelse(is.na(Presencas$Comunidade.y), Presencas$Comunidade.x, Presencas$Comunidade.y)
# #Presencas$Distrito <- ifelse(is.na(Presencas$Distrito.y), Presencas$Distrito.x, Presencas$Distrito)
# Presencas$Provincia <-  Presencas$Provincia.y
# Presencas$Facilitator <- ifelse(is.na(Presencas$Facilitator.y), Presencas$Facilitator.x, Presencas$Facilitator.y)
Presencas <- Presencas %>%
select(
Nome_Participante,
Provincia,
Idade,
Nome_District,
Deslocado,
Comunidade,
Sexo,
Facilitator,
Formation_PI,
Session_PI,
Formation_AG,
Session,
ID_Participante,
Presenca,
Reposicao_sessao
)
Presencas$Distrito <- Presencas$Nome_District
Presencas$Distrito <- sub("Ribaué", "Ribaue", Presencas$Distrito)
### Replace library(dplyr)
# Suponha que df é seu dataframe e sessao_PI é a variável a ser modificada
Presencas <- Presencas %>%
mutate(Session_PI = case_when(
Session_PI == "Introdução: Pontos-Chave  (Proatividade e Reatividade, Pensar no futuro, Superar obstáculos, Explorar iniciativas pessoais))" ~ "Sessao 1",
Session_PI == "O processo  empreendedor (Identificando oportunidades de negócio,  Tu e a IP,  Recursos)" ~ "Sessao 2",
Session_PI == "O Processo Empreendedor Identificando Oportunidades de  Negócio (Mercado,  Avaliação &amp; Comentários)" ~ "Sessao 3",
Session_PI == "O Processo  Empreendedor Definição de Metas,  Planejamento" ~ "Sessao 4",
Session_PI == "O Processo Empreendedor (Planejamento: Arranjar financiamento,  Estabelecer ligações,  Monitorar o progresso,  Contabilidade &  Poupança)" ~ "Sessao 5",
Session_PI == "O Processo  Empreendedor (Comentários:  Experimentar, Erros)" ~ "Sessao 6",
Session_PI == "Iniciativa Pessoal (Superar Obstáculos - Ténicas de resolução de  problemas)" ~ "Sessao 7",
Session_PI == "Iniciativa Pessoal (Superar obstáculos - Técnicas de resolução de  problemas)" ~ "Sessao 8",
Session_PI == "Revisão" ~ "Sessao 9",
TRUE ~ Session_PI # Mantém o valor original caso não corresponda a nenhum dos anteriores
))
############################################################################################
Presencas <- Presencas %>%
mutate(Session = case_when(
Session == "Abordagem sobre principios basicos de implementação de FFS" ~ "Sessao 1",
Session == "Criterios de Identificação de areas para estabelecimento dos FFS (DRP)" ~ "Sessao 2",
Session == "Demarcaçao de campos de(Parcelas para monocultura e culturas de consorciação)" ~ "Sessao 3",
Session == "Sessões de demonstração de diversas técnicas de sementeira" ~ "Sessao 4",
Session == "Sessões de Controlo de pragas e Infestantes (produção de pesticidas botanicos)" ~ "Sessao 5",
Session == "Sessões de Monitoria de campos (estagio fenologico da cultura)Tecnica de AESA" ~ "Sessao 6",
Session == "Tecnicas de cuidados pre colheita, colheita e pos colheita (PHM)" ~ "Sessao 7",
Session == "Abordagem do Sistema de Desenvolvimento de Mercados (Ligação com o mercado)" ~ "Sessao 8",
TRUE ~ Session # Mantém o valor original caso não corresponda a nenhum dos anteriores
))
#######################################################################################################
# Aplicar a função às colunas do DataFrame
Presencas$Distrito <- remove_accents(Presencas$Distrito)
####Funcoes
# Função para remover acentuação
remove_accents <- function(text) {
text <- tolower(text)
text <- str_replace_all(text, "[^a-z0-9 ]", "")
return(text)
}
calcular_frequencias <- function(data, ...) {
# Agrupa por variáveis especificadas e calcula a contagem
data_grouped <- data %>%
group_by(...) %>%
summarise(n = n(), .groups = "drop")
# Extrai os nomes das variáveis de agrupamento para reagrupar
group_vars <- quos(...)
# Reagrupa sem a última variável para calcular as porcentagens
data_freq <- data_grouped %>%
group_by(!!!group_vars[-length(group_vars)]) %>%
mutate(freq = n / sum(n) * 100,
Percentagem = round(freq, digits = 0))
data_freq
}
library(DT)
renderizar_tabela_interativa <- function(dataframe, ...) {
tabela_frequencias <- calcular_frequencias(dataframe, ...)
datatable(tabela_frequencias, options = list(pageLength = 5, autoWidth = TRUE))
}
###########
# Função para mapear valores para bolinhas coloridas ou X
map_values <- function(value) {
if (is.na(value)) {
return("X")
} else if (value == "sim") {
return('<span style="color:green;">•</span>') # Bolinha verde
} else if (value == "nao") {
return('<span style="color:red;">•</span>')   # Bolinha vermelha
} else {
return(value)
}
}
runApp()
runApp()
runApp()
Kufungula <- read_excel("Data/Lista_Selecionados_Kufungula.xlsx")
Presencas <- read_dta("Data/Presencas_clear.dta")
Nampula<- Kufungula %>% filter(Provincia=="Nampula")
Cabo_Delgado<- Kufungula %>% filter(Provincia=="Cabo Delgado")
# Selecione apenas as colunas desejadas em Presencas_atualizado
# Presencas$Comunidade <- ifelse(is.na(Presencas$Comunidade.y), Presencas$Comunidade.x, Presencas$Comunidade.y)
# #Presencas$Distrito <- ifelse(is.na(Presencas$Distrito.y), Presencas$Distrito.x, Presencas$Distrito)
# Presencas$Provincia <-  Presencas$Provincia.y
# Presencas$Facilitator <- ifelse(is.na(Presencas$Facilitator.y), Presencas$Facilitator.x, Presencas$Facilitator.y)
Presencas <- Presencas %>%
select(
Nome_Participante,
Provincia,
Idade,
Nome_District,
Deslocado,
Comunidade,
Sexo,
Facilitator,
Formation_PI,
Session_PI,
Formation_AG,
Session,
ID_Participante,
Presenca,
Reposicao_sessao
)
Presencas$Distrito <- Presencas$Nome_District
Presencas$Distrito <- sub("Ribaué", "Ribaue", Presencas$Distrito)
### Replace library(dplyr)
# Suponha que df é seu dataframe e sessao_PI é a variável a ser modificada
Presencas <- Presencas %>%
mutate(Session_PI = case_when(
Session_PI == "Introdução: Pontos-Chave  (Proatividade e Reatividade, Pensar no futuro, Superar obstáculos, Explorar iniciativas pessoais))" ~ "Sessao 1",
Session_PI == "O processo  empreendedor (Identificando oportunidades de negócio,  Tu e a IP,  Recursos)" ~ "Sessao 2",
Session_PI == "O Processo Empreendedor Identificando Oportunidades de  Negócio (Mercado,  Avaliação &amp; Comentários)" ~ "Sessao 3",
Session_PI == "O Processo  Empreendedor Definição de Metas,  Planejamento" ~ "Sessao 4",
Session_PI == "O Processo Empreendedor (Planejamento: Arranjar financiamento,  Estabelecer ligações,  Monitorar o progresso,  Contabilidade &  Poupança)" ~ "Sessao 5",
Session_PI == "O Processo  Empreendedor (Comentários:  Experimentar, Erros)" ~ "Sessao 6",
Session_PI == "Iniciativa Pessoal (Superar Obstáculos - Ténicas de resolução de  problemas)" ~ "Sessao 7",
Session_PI == "Iniciativa Pessoal (Superar obstáculos - Técnicas de resolução de  problemas)" ~ "Sessao 8",
Session_PI == "Revisão" ~ "Sessao 9",
TRUE ~ Session_PI # Mantém o valor original caso não corresponda a nenhum dos anteriores
))
############################################################################################
Presencas <- Presencas %>%
mutate(Session = case_when(
Session == "Abordagem sobre principios basicos de implementação de FFS" ~ "Sessao 1",
Session == "Criterios de Identificação de areas para estabelecimento dos FFS (DRP)" ~ "Sessao 2",
Session == "Demarcaçao de campos de(Parcelas para monocultura e culturas de consorciação)" ~ "Sessao 3",
Session == "Sessões de demonstração de diversas técnicas de sementeira" ~ "Sessao 4",
Session == "Sessões de Controlo de pragas e Infestantes (produção de pesticidas botanicos)" ~ "Sessao 5",
Session == "Sessões de Monitoria de campos (estagio fenologico da cultura)Tecnica de AESA" ~ "Sessao 6",
Session == "Tecnicas de cuidados pre colheita, colheita e pos colheita (PHM)" ~ "Sessao 7",
Session == "Abordagem do Sistema de Desenvolvimento de Mercados (Ligação com o mercado)" ~ "Sessao 8",
TRUE ~ Session # Mantém o valor original caso não corresponda a nenhum dos anteriores
))
#######################################################################################################
# Aplicar a função às colunas do DataFrame
Presencas$Distrito <- remove_accents(Presencas$Distrito)
Presencas$Presenca <- remove_accents(Presencas$Presenca)
Presencas$Deslocado <- remove_accents(Presencas$Deslocado)
Presencas$Facilitator <- remove_accents(Presencas$Facilitator)
Presencas$Formation_AG <- remove_accents(Presencas$Formation_AG)
Presencas$Formation_PI <- remove_accents(Presencas$Formation_PI)
# Transformar as colunas em maiúsculas
Presencas$Distrito <- toupper(Presencas$Distrito)
Presencas$Presenca <- toupper(Presencas$Presenca)
Presencas$Deslocado <- toupper(Presencas$Deslocado)
Presencas$Facilitator <- toupper(Presencas$Facilitator)
Presencas$Formation_AG <- toupper(Presencas$Formation_AG)
Presencas$Formation_PI <- toupper(Presencas$Formation_PI)
###############################################################################
Presencas <-  Presencas %>%
rename(presenca=Presenca,
FormacaoPI=Session_PI,
NomeSessao=Session)
Presencas<- Presencas  %>%
mutate(`Faixa Etária 18-24` = ifelse(Idade >= 18 & Idade <= 24, 1, 0),
`Faixa Etária 25-35` = ifelse(Idade > 24 & Idade <= 35, 1, 0))
presencas_PI<-filter(Presencas, Presencas$Formation_PI=="SIM")
presencas_AG<-filter(Presencas, Presencas$Formation_AG=="SIM")
indiv_PI<- Presencas %>% pivot_wider(names_from =NomeSessao, values_from =presenca)
indiv_PI<- indiv_PI %>%
group_by(Nome_Participante, Distrito, Comunidade )  %>% summarize(
`Sessao 1`=max(`Sessao 1`, na.rm = T),
`Sessao 2`=max(`Sessao 2`, na.rm = T),
`Sessao 3`=max(`Sessao 3`, na.rm = T)
)
Kufungula <- read_excel("Data/Lista_Selecionados_Kufungula.xlsx")
Presencas <- read_dta("Data/Presencas_clear.dta")
Nampula<- Kufungula %>% filter(Provincia=="Nampula")
Cabo_Delgado<- Kufungula %>% filter(Provincia=="Cabo Delgado")
Presencas <- Presencas %>%
select(
Nome_Participante,
Provincia,
Idade,
Nome_District,
Deslocado,
Comunidade,
Sexo,
Facilitator,
Formation_PI,
Session_PI,
Formation_AG,
Session,
ID_Participante,
Presenca,
Reposicao_sessao
)
Presencas$Distrito <- Presencas$Nome_District
Presencas$Distrito <- sub("Ribaué", "Ribaue", Presencas$Distrito)
# Suponha que df é seu dataframe e sessao_PI é a variável a ser modificada
Presencas <- Presencas %>%
mutate(Session_PI = case_when(
Session_PI == "Introdução: Pontos-Chave  (Proatividade e Reatividade, Pensar no futuro, Superar obstáculos, Explorar iniciativas pessoais))" ~ "Sessao 1",
Session_PI == "O processo  empreendedor (Identificando oportunidades de negócio,  Tu e a IP,  Recursos)" ~ "Sessao 2",
Session_PI == "O Processo Empreendedor Identificando Oportunidades de  Negócio (Mercado,  Avaliação &amp; Comentários)" ~ "Sessao 3",
Session_PI == "O Processo  Empreendedor Definição de Metas,  Planejamento" ~ "Sessao 4",
Session_PI == "O Processo Empreendedor (Planejamento: Arranjar financiamento,  Estabelecer ligações,  Monitorar o progresso,  Contabilidade &  Poupança)" ~ "Sessao 5",
Session_PI == "O Processo  Empreendedor (Comentários:  Experimentar, Erros)" ~ "Sessao 6",
Session_PI == "Iniciativa Pessoal (Superar Obstáculos - Ténicas de resolução de  problemas)" ~ "Sessao 7",
Session_PI == "Iniciativa Pessoal (Superar obstáculos - Técnicas de resolução de  problemas)" ~ "Sessao 8",
Session_PI == "Revisão" ~ "Sessao 9",
TRUE ~ Session_PI # Mantém o valor original caso não corresponda a nenhum dos anteriores
))
############################################################################################
Presencas <- Presencas %>%
mutate(Session = case_when(
Session == "Abordagem sobre principios basicos de implementação de FFS" ~ "Sessao 1",
Session == "Criterios de Identificação de areas para estabelecimento dos FFS (DRP)" ~ "Sessao 2",
Session == "Demarcaçao de campos de(Parcelas para monocultura e culturas de consorciação)" ~ "Sessao 3",
Session == "Sessões de demonstração de diversas técnicas de sementeira" ~ "Sessao 4",
Session == "Sessões de Controlo de pragas e Infestantes (produção de pesticidas botanicos)" ~ "Sessao 5",
Session == "Sessões de Monitoria de campos (estagio fenologico da cultura)Tecnica de AESA" ~ "Sessao 6",
Session == "Tecnicas de cuidados pre colheita, colheita e pos colheita (PHM)" ~ "Sessao 7",
Session == "Abordagem do Sistema de Desenvolvimento de Mercados (Ligação com o mercado)" ~ "Sessao 8",
TRUE ~ Session # Mantém o valor original caso não corresponda a nenhum dos anteriores
))
# Aplicar a função às colunas do DataFrame
Presencas$Distrito <- remove_accents(Presencas$Distrito)
Presencas$Presenca <- remove_accents(Presencas$Presenca)
Presencas$Deslocado <- remove_accents(Presencas$Deslocado)
Presencas$Facilitator <- remove_accents(Presencas$Facilitator)
Presencas$Formation_AG <- remove_accents(Presencas$Formation_AG)
Presencas$Formation_PI <- remove_accents(Presencas$Formation_PI)
# Transformar as colunas em maiúsculas
Presencas$Distrito <- toupper(Presencas$Distrito)
Presencas$Presenca <- toupper(Presencas$Presenca)
Presencas$Deslocado <- toupper(Presencas$Deslocado)
Presencas$Facilitator <- toupper(Presencas$Facilitator)
Presencas$Formation_AG <- toupper(Presencas$Formation_AG)
Presencas$Formation_PI <- toupper(Presencas$Formation_PI)
###############################################################################
Presencas <-  Presencas %>%
rename(presenca=Presenca,
FormacaoPI=Session_PI,
NomeSessao=Session)
Presencas<- Presencas  %>%
mutate(`Faixa Etária 18-24` = ifelse(Idade >= 18 & Idade <= 24, 1, 0),
`Faixa Etária 25-35` = ifelse(Idade > 24 & Idade <= 35, 1, 0))
presencas_PI<-filter(Presencas, Presencas$Formation_PI=="SIM")
presencas_AG<-filter(Presencas, Presencas$Formation_AG=="SIM")
indiv_PI<- Presencas %>% pivot_wider(names_from =NomeSessao, values_from =presenca)
indiv_PI<- indiv_PI %>%
group_by(Nome_Participante, Distrito, Comunidade )  %>% summarize(
`Sessao 1`=max(`Sessao 1`, na.rm = T),
`Sessao 2`=max(`Sessao 2`, na.rm = T),
`Sessao 3`=max(`Sessao 3`, na.rm = T)
)
indiv_PI<- Presencas %>% pivot_wider(names_from =NomeSessao, values_from =presenca)
indiv_PI<- indiv_PI %>%
group_by(Nome_Participante, Distrito, Comunidade )  %>% summarize(
`Sessao 1`=max(`Sessao 1`, na.rm = T),
`Sessao 2`=max(`Sessao 2`, na.rm = T),
`Sessao 3`=max(`Sessao 3`, na.rm = T),
`Sessao 4`=max(`Sessao 4`, na.rm = T)
)
str(indiv_PI)
View(indiv_PI)
indiv_PI<- Presencas %>% pivot_wider(names_from =NomeSessao, values_from =presenca)
load("C:/Users/MUVA/OneDrive/Projectos Rstudio/2023/Implementacao_Kufungula/.RData")
library(readxl)
Lista_Selecionados_Kufungula <- read_excel("C:/Users/MUVA/OneDrive/Projectos Rstudio/2023/Implementacao_Kufungula/Lista_Selecionados_Kufungula.xlsx")
View(Lista_Selecionados_Kufungula)
table(Lista_Selecionados_Kufungula$Distrito)
install.packages("foreign")
install.packages("foreign")
library(foreign)
write.dta(Lista_Selecionados_Kufungula, file = C:/Users/MUVA/OneDrive/Projectos Rstudio/2023/Implementacao_Kufungula/Lista_Selecionados_Kufungula.dta)
write.dta(Lista_Selecionados_Kufungula, file = "C:/Users/MUVA/OneDrive/Projectos Rstudio/2023/Implementacao_Kufungula/Lista_Selecionados_Kufungula.dta")
shiny::runApp()
load("C:/Users/MUVA/OneDrive/Projectos Rstudio/2023/dashboard_kufungula-versao1/.RData")
